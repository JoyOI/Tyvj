@model Problem
@{
    ViewBag.Title = string.Format("P{0} {1}", Model.ID, Model.Title);
}
<style>
    .tyvj-left h1,.tyvj-left  h2,.tyvj-left  h3 {
        margin: 20px 0;
    }

    .tyvj-content-inner {
        font-size: 14px;
        padding-bottom:15px;
    }
</style>
<div class="tyvj-left" style="width:755px;">
    <div class="tyvj-shadow">
        <div class="tyvj-content-header">
            <strong>P@(Model.ID)</strong> @Model.Title
        </div>
        <div class="tyvj-content" style="padding-top:10px;">
            <div class="tyvj-content-subtitle">
                时间: @(Model.TimeLimit)ms / 空间: @(Model.MemoryLimit)KiB / Java类名: Main
            </div>
            @if (!string.IsNullOrEmpty(Model.Background))
            {
                <div class="tyvj-boder-top tyvj-content-inner">
                    <h2>背景</h2>
                    <div class="tyvj-content-inner">
                        @Html.Sanitized(Model.Background)
                    </div>
                </div>
            }
            @if (!string.IsNullOrEmpty(Model.Description))
            {
                <div class="tyvj-boder-top tyvj-content-inner">
                    <h2>描述</h2>
                    <div class="tyvj-content-inner">
                        @Html.Sanitized(Model.Description)
                    </div>
                </div>
            }
            @if (!string.IsNullOrEmpty(Model.Input))
            {
                <div class="tyvj-boder-top  tyvj-content-inner">
                    <h2>输入格式</h2>
                    <div class="tyvj-content-inner">
                        @Html.Sanitized(Model.Input)
                    </div>
                </div>
            }
            @if (!string.IsNullOrEmpty(Model.Output))
            {
                <div class="tyvj-boder-top tyvj-content-inner">
                    <h2>输出格式</h2>
                    <div class="tyvj-content-inner">
                        @Html.Sanitized(Model.Output)
                    </div>
                </div>
            }
            @if (Model.TestCases.Where(x => x.Type == TestCaseType.Sample).Count() > 0)
            {
                <div class="tyvj-boder-top-red tyvj-content-inner">
                    @{
                var number = 1;
                    }
                    @foreach (var sample in Model.TestCases.Where(x => x.Type == TestCaseType.Sample))
                    {
                        <h2>测试样例@(number++)</h2>
                        <div class="tyvj-content-inner">
                            <h3>输入</h3>
                            <blockquote>@Html.Sanitized(HttpUtility.HtmlEncode(sample.Input.TrimEnd('\n')).Replace("\n", "<br/>"))</blockquote>
                            <h3>输出</h3>
                            <blockquote>@Html.Sanitized(HttpUtility.HtmlEncode(sample.Output.TrimEnd('\n')).Replace("\n", "<br/>"))</blockquote>
                        </div>
                    }
                </div>
            }
            @if (!string.IsNullOrEmpty(Model.Hint))
            {
                <div class="tyvj-boder-top tyvj-content-inner">
                    <h2>备注</h2>
                    <div class="tyvj-content-inner">
                        @Html.Sanitized(Model.Hint)
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<div class="tyvj-right" style="width:200px;">
    <ul class="section" id="actions">
        @if (User.Identity.IsAuthenticated)
        {
            <li><a class="highlight action" href="javascript:void(0);" id="btnLoadCodeEditBox">提交评测</a></li>
        }
        @if (ViewBag.ContestID == null)
        {
            <li><a class="action" href="/Problem/@Model.ID/solution">查看题解</a></li>
        }
        <li><a class="action" href="/p/@Model.ID/statuses" target="_self">查看本题提交记录</a></li>
        @if (User.Identity.IsAuthenticated && (ViewBag.CurrentUser.Role >= UserRole.Master || Model.UserID == ViewBag.CurrentUser.ID))
        {
            <li><a class="action" href="/Problem/@Model.ID/Edit">编辑题目</a></li>
            if (ViewBag.ContestID != null)
            {
                <li><a class="action" href="/Contest/@ViewBag.ContestID/Edit">编辑比赛</a></li>
            }
        }
    </ul>
    @if (User.Identity.IsAuthenticated && ViewBag.Statuses.Count > 0)
    {
        <div class="tyvj-border-top-gray tyvj-side-content">
            <h3>我的记录</h3>
            @foreach (vProblemStatus s in ViewBag.Statuses)
            {
                <p>@s.Time <a href="/Status/@s.ID" class="judgeState@(s.ResultAsInt)">@CommonEnums.JudgeResultDisplay[s.ResultAsInt]</a></p>
            }
        </div>
    }
</div>

@if (User.Identity.IsAuthenticated)
{
    <div style="display:none">
        <div id="CodeEditBox">
            @using (Html.BeginForm("Create", "Status", FormMethod.Post, new { id = "frmSubmitCode" }))
            {
                @Html.AntiForgeryToken()
                <input type="hidden" value="@Model.ID" name="problem_id" />
                if (ViewBag.ContestID != null)
                {
                    <input type="hidden" value="@ViewBag.ContestID" name="contest_id" />
                }
                <textarea id="editor" name="code" style="width:600px;height:280px;font-size:12px;"></textarea>
                <p>
                    <select id="lstLanguages" name="language_id" class="select" style="width:100px;">
                        @{
                var i = 0;
                foreach (var name in CommonEnums.LanguageDisplay)
                {
                    if (((User)ViewBag.CurrentUser).CommonLanguageAsInt == i)
                    {
                        <option value="@(i++)" selected>@name</option>
                    }
                    else
                    {
                        <option value="@(i++)">@name</option>
                    }
                }
                        }
                    </select>
                    <input type="button" id="btnSubmitCode" class="button button-def" value="提交" />
                    <a href="#" id="btnClearCodeBox">清空代码</a>
                </p>
            }
        </div>
    </div>
}
<script>
    ReceivePush("Status");
</script>